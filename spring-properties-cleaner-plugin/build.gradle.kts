/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id("org.gradlex.maven-plugin-development") version "1.0.3"

    // y'know, for coverage
    jacoco

    // fine, let's lombok this one too
    id("io.freefair.lombok") version "8.13"

    id("com.diffplug.spotless") version "7.0.3"

    `maven-publish`
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

spotless {
    java {
        palantirJavaFormat()
    }
}

dependencies {
    implementation(project(":app"))

    implementation("org.apache.maven:maven-plugin-api:3.6.3")
    compileOnly("org.apache.maven.plugin-tools:maven-plugin-annotations:3.6.4")
    implementation("org.apache.maven:maven-project:2.2.1")

    // add in Lombok because I gave up
    compileOnly("org.projectlombok:lombok:1.18.36")
    annotationProcessor("org.projectlombok:lombok:1.18.36")
    testCompileOnly("org.projectlombok:lombok:1.18.36")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.36")

    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)
    testImplementation("org.assertj:assertj-core:3.27.3")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.11.4")
    testImplementation("org.mockito:mockito-junit-jupiter:5.16.1")

    testImplementation("uk.org.webcompere:system-stubs-jupiter:2.1.7")
    testImplementation("org.apache.maven:maven-core:3.6.3")
}

mavenPlugin {
    name = "Spring Properties Cleaner Plugin"
    artifactId = "spring-properties-cleaner-plugin"
    groupId = "uk.org.webcompere"
    version = "1.0.0"
    description = project.description
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

tasks.named<Test>("test") {
    useJUnitPlatform()
    finalizedBy(tasks.jacocoTestReport)
}

jacoco {
    toolVersion = "0.8.13"
}

tasks.jacocoTestReport {
    dependsOn(tasks.test) // Ensure tests run before generating reports

    reports {
        xml.required.set(true)
        html.required.set(true)
        csv.required.set(false)
    }
}

publishing {
    publications {
        create<MavenPublication>("maven") {
            groupId = "uk.org.webcompere"
            artifactId = "spring-properties-cleaner-plugin"
            version = "1.0.0"

            from(components["java"])
        }
    }
}