/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'application'

    // for fat jars
    id 'com.github.johnrengelman.shadow' version '8.1.1'

    // y'know, for coverage
    id 'jacoco'

    id 'jacoco-report-aggregation'

    // fine, let's lombok this stupid set of POJOs
    id 'io.freefair.lombok' version '8.13'

    id 'com.diffplug.spotless' version '7.0.3'

    id 'signing'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

spotless {
    java {
        palantirJavaFormat()
    }
}

signing {
    useGpgCmd()
    sign publishing.publications
}

dependencies {
    implementation 'com.beust:jcommander:1.82'

    // add in Lombok because I gave up
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'

    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testImplementation 'org.assertj:assertj-core:3.27.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // Consider adding version if not managed by a BOM/catalog
    testImplementation 'org.mockito:mockito-junit-jupiter:5.16.1'

    testImplementation 'uk.org.webcompere:system-stubs-jupiter:2.1.7'
    testImplementation 'uk.org.webcompere:test-gadgets-jupiter:1.0.2'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11) // import org.gradle.jvm.toolchain.JavaLanguageVersion if needed
    }
    withSourcesJar() // Generates the sources JAR
    withJavadocJar() // Generates the Javadoc JAR
}

application {
    // Define the main class for the application.
    mainClass = 'uk.org.webcompere.spc.App'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

shadowJar { // import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar if needed for type-aware configuration
    archiveBaseName = 'spring-properties-cleaner'
    archiveClassifier = ''
    archiveVersion = '1.0'
}

jacoco {
    toolVersion = '0.8.13'
}

tasks.jacocoTestReport {
    dependsOn tasks.test // Ensure tests run before generating reports

    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}

publishing {
    publications {
        maven(MavenPublication) { // import org.gradle.api.publish.maven.MavenPublication if needed
            groupId = 'uk.org.webcompere'
            artifactId = 'spring-properties-cleaner-app'

            artifact(tasks.shadowJar) {
                classifier = null // Ensures it replaces the main JAR
            }
            artifact tasks.named('sourcesJar')
            artifact tasks.named('javadocJar')
        }
    }
}